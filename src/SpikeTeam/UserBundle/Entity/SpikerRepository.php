<?php

namespace SpikeTeam\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\HttpFoundation\Response;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;

use SpikeTeam\UserBundle\Entity\Spiker;

/**
 * SpikerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpikerRepository extends EntityRepository
{

	/**
	 * @var $serializer
	 */
	private $container;

    /**
     * @var $em
     */
    private $em;

	public function setContainerEm($container, $em)
	{
		$this->container = $container;
        $this->em = $em;
	}

    /**
     * Common method for setting Spiker info
     * @param Spiker $spiker
     * @param $data
     * @return Spiker $spiker
     */
    public function setSpikerInfo(Spiker $spiker, $data)
    {
        $spiker->setFirstName($data['first_name']);
        $spiker->setLastName($data['last_name']);
        $spiker->setPhoneNumber($data['phone_number']);
        $this->em->persist($spiker);
        $this->em->flush();

        return $spiker;
    }

	/**
     * Common method for setting Response to send
     * @param $statusCode
     * @param $routeName
     * @param $id
     * @return Response $response
     */
    public function generateJsonResponse($statusCode, $data = null, $routeName = null, $id = null)
    {
        $response = new Response();
        $response->setStatusCode($statusCode);
        if (isset($data)) {
            $serialized = $this->container->get('serializer')->serialize($data, 'json');
            $response->setContent($serialized);
        } else {
            // set the `Location` header only when creating new resources
            if (201 === $statusCode) {
                if (NULL === $routeName) {
                    $routeName = 'spiketeam_user_user_spikershow';
                }
                $response->headers->set('Location',
                    $this->container->get('router')->generate(
                        $routeName, array('id' => $id),
                        true // absolute
                    )
                );
            }
        }

        return $response;
    }
}
