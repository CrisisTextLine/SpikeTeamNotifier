<?php

namespace SpikeTeam\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\HttpFoundation\Response;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;

use SpikeTeam\UserBundle\Entity\Spiker;

/**
 * SpikerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpikerRepository extends EntityRepository
{

	/**
	 * @var $container
	 */
	protected $container;

    /**
     * Common method for setting Spiker info. Returns false if phone number can't be formatted correctly.
     * @param Spiker $spiker
     * @param $data
     * @return Spiker $spiker
     */
    public function setSpikerInfo(Spiker $spiker, $data)
    {
        $phoneNumber = $this->processNumber($data['phone_number']);
        if ($phoneNumber) {
            $em = $this->getEntityManager();
            $spiker->setPhoneNumber($phoneNumber);
            if (isset($data['first_name'])) {
                $spiker->setFirstName($data['first_name']);                
            }
            if (isset($data['last_name'])) {
                $spiker->setLastName($data['last_name']);                
            }
            if (isset($data['is_enabled'])) {
                $spiker->setIsEnabled($data['is_enabled']);
            }
            $em->persist($spiker);
            $em->flush();

            return $spiker;            
        } else {
            return false;
        }
    }

	/**
     * Common method for setting Response to send
     * @param $statusCode
     * @param $routeName
     * @param $phoneNumber
     * @return Response $response
     */
    public function generateJsonResponse($statusCode, $data = null, $routeName = null)
    {
        $response = new Response();
        $response->setStatusCode($statusCode);
        if (isset($data)) {
            $serialized = $this->container->get('serializer')->serialize($data, 'json');
            $response->setContent($serialized);
        } else {
            // set the `Location` header only when creating new resources
            if (201 === $statusCode) {
                if (NULL === $routeName) {
                    $routeName = 'spiketeam_user_spiker_spikersall';
                }
                $response->headers->set('Location',
                    $this->container->get('router')->generate(
                        $routeName, array(), true // absolute
                    )
                );
            }
        }

        return $response;
    }

    public function processNumber($phoneNumber)
    {
        $return = false;
        $phoneNumber = str_replace(
            array('-', ' ', '(', ')', '+', '{', '}', '.', '/', '\\'), '', $phoneNumber
        );
        if (ctype_digit($phoneNumber)) {
            switch (strlen($phoneNumber)) {
                case 10:
                    $return = '1' . $phoneNumber;
                    break;
                case 11:
                    $return = $phoneNumber;
                    break;
            }
        }
        return $return;
    }
}
